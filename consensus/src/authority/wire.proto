syntax = "proto3";
package wire;

message Voter {
    oneof payload {
        Vote vote = 1;
        Notarization notarization = 2;
        Finalize finalize = 3;  
        Finalization finalization = 4;
    }
}

message Index {
    // View of current proposal.
    uint64 view = 1;

    // Height of current proposal (must be 1 greater than parent).
    uint64 height = 2;
}

message Parent {
    // View is used to quickly determine which null notarizations are missing for
    // some verification.
    uint64 view = 1;

    // Digest is used to link proposals using a cryptographic hash.
    bytes digest = 2;
}

// To ensure all participants stay informed, Container is included in all vote messages.
message Proposal {
    Index index = 1;
    Parent parent = 2; 
    bytes payload = 3; // Hash 
}

message Null {
    uint64 view = 1;
}

message Container {
    oneof payload {
        Proposal proposal = 1;
        Null null = 2;
    }
}

message Signature {
    bytes public_key = 1;
    bytes signature = 2;
}

// A vote from the leader for a view is also treated as a proposal
// for that view.
message Vote {
    Container container = 1; 
    Signature signature = 2;
}

message Notarization {
    Container container = 1;
    repeated Signature signatures = 2;
}

message Finalize {
    Container container = 1;
    Signature signature = 2;
}

message Finalization {
    Container container = 1;
    repeated Signature signatures = 2;
}

message Backfiller {
    oneof payload {
        Request request = 1;
        Response response = 2;
    }
}

message Request {
    repeated uint64 containers = 1;
    repeated uint64 null = 2;
}

message Response {
    repeated Notarization notarizations = 1;
}