syntax = "proto3";
package wire;

// To avoid complex resolution cases, we include the beacon in the same message
// as what is required to vote.
message Voter {
    oneof beacon {
        // TODO: seed from v is used as randomness to select leader in v+1
        Part part = 1;
        Seed seed = 2;
    }
    oneof payload {
        Notarize notarize = 3;
        Notarization notarization = 4;
        Nullify nullify = 5;
        Nullification nullification = 6;
        Finalize finalize = 7;
        Finalization finalization = 8;
    }
}

message Part {
    uint64 view = 1;
    bytes partial_signature = 2;
}

message Seed {
    uint64 view = 1;
    bytes signature = 2;
}

// To ensure all participants stay informed, Container is included in all vote messages.
message Proposal {
    uint64 view = 1;
    uint64 parent = 2;
    bytes payload = 3; // Digest
}

// A vote from the leader for a view is also treated as a proposal
// for that view.
message Notarize {
    Proposal proposal = 1;
    bytes partial_signature = 2;
}

message Notarization {
    Proposal proposal = 1;
    bytes signature = 2;
}

// Nullify is used to indicate that a view should be nullified (skipped).
message Nullify {
    uint64 view = 1;
    bytes partial_signature = 2;
}

message Nullification {
    uint64 view = 1;
    bytes signature = 2;
}

message Finalize {
    Proposal proposal = 1;
    bytes partial_signature = 2;
}

message Finalization {
    Proposal proposal = 1;
    bytes signature = 2;
}

message Backfiller {
    uint64 id = 1;
    oneof payload {
        Request request = 2;
        Response response = 3;
    }
}

message Request {
    repeated uint64 seeds = 1;
    repeated uint64 notarizations = 2;
    repeated uint64 nullifications = 3;
}

message Response {
    repeated Seed seeds = 1;
    repeated Notarization notarizations = 2;
    repeated Nullification nullifications = 3;
}